version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: internal-chat-postgres
    environment:
      POSTGRES_DB: internal_chat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal-chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: internal-chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - internal-chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Server (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: internal-chat-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/internal_chat
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
      FILE_UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - internal-chat-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  # Frontend Web App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: internal-chat-frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_WS_URL: ws://localhost:3001
      VITE_APP_NAME: Internal Chat App
      VITE_APP_VERSION: 1.0.0
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - internal-chat-network
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: internal-chat-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@internal-chat.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - internal-chat-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - tools

  # Redis Commander for Redis Management (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: internal-chat-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - internal-chat-network
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - tools

  # Nginx Reverse Proxy (Production-like)
  nginx:
    image: nginx:alpine
    container_name: internal-chat-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    networks:
      - internal-chat-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  internal-chat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
